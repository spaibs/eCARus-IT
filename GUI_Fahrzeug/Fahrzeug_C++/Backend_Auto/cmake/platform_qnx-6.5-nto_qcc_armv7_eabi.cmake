SET(CMAKE_SYSTEM_NAME QNX)
SET(CMAKE_SYSTEM_VERSION 6.5.0)
SET(ARM 1)
SET(CMAKE_SYSTEM_PROCESSOR ARM)

# we use qcc for compiling
set(CMAKE_COMPILER_IS_QCC 1)


set(EB_PLATFORM_OS_FAMILY POSIX)
set(EB_PLATFORM_OS QNX)
set(EB_PLATFORM_ARCH ARM)

## The following to env variables must be defined, otherwise gcc wont work
SET(QNX_TARGET $ENV{QNX_TARGET} CACHE PATH "Path to QNX Target env")
SET(QNX_HOST $ENV{QNX_HOST} CACHE PATH "Path to QNX host tool chain")
# hence we reuse the variables, but the Cygwin paths must be converted into
# windows paths before that:

IF(QNX_HOST STREQUAL "")
    MESSAGE(SEND_ERROR "Error: No QNX build environment specified. Use the environment variable QNX_HOST for host environment!")
ELSE(QNX_HOST STREQUAL "")
    SET(QNX_HOST_CMAKE_PATH ${QNX_HOST})
ENDIF(QNX_HOST STREQUAL "")

IF(QNX_TARGET STREQUAL "")
    MESSAGE(SEND_ERROR "Error: No QNX build environment specified. Use the environment variables QNX_TARGET for target environment!")
ELSE(QNX_TARGET STREQUAL "")
    SET(QNX_TARGET_CMAKE_PATH ${QNX_TARGET})
ENDIF(QNX_TARGET STREQUAL "")

MESSAGE(STATUS "Compiling for QNX 6.5.0 ARM")



SET(CMAKE_FIND_ROOT_PATH ${QNX_HOST_CMAKE_PATH} ${QNX_TARGET_CMAKE_PATH})

SET(QCC_GCC_BACKEND_VERSION "4.4.2" CACHE STRING "Select GCC version used by QCC")


SET(CPU_ARM_ARCH "armv7-a")
SET(CPU_QNX_PATH "armv7-le")
SET(CPU_ARM_SPECIFIC "cortex-a8")
SET(CPU_ARM_FLOAT_ABI "softfp")
SET(CPU_ARM_FPU "neon")
set(QCC_GCC_BACKEND_TYPE "gcc_ntoarmv7le_cpp-ne")
set(QNX_CPU_ARCH "armle-v7")
set(EB_PLATFORM_ARM_ARCH 7)

SET(CMAKE_CXX_COMPILER "${QNX_HOST_CMAKE_PATH}/usr/bin/qcc.exe")
SET(CMAKE_C_COMPILER "${QNX_HOST_CMAKE_PATH}/usr/bin/qcc.exe")
SET(CMAKE_LINKER "${QNX_HOST_CMAKE_PATH}/usr/bin/qcc.exe")

SET(CMAKE_CXX_FLAGS "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -march=${CPU_ARM_ARCH} -mtune=${CPU_ARM_SPECIFIC} -mfloat-abi=${CPU_ARM_FLOAT_ABI} -mfpu=${CPU_ARM_FPU}" CACHE STRING "" FORCE)
SET(CMAKE_C_FLAGS   "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -march=${CPU_ARM_ARCH} -mtune=${CPU_ARM_SPECIFIC} -mfloat-abi=${CPU_ARM_FLOAT_ABI} -mfpu=${CPU_ARM_FPU}" CACHE STRING "" FORCE)

SET(CMAKE_SHARED_LIBRARY_C_FLAGS "-Wc,-fPIC")
SET(CMAKE_SHARED_LIBRARY_CXX_FLAGS "-Wc,-fPIC")

# set the profile for the linker too
SET(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -lm -fPIC -shared")
SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -lm -fPIC -shared")

SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -lm -Bdynamic")
SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS "-V${QCC_GCC_BACKEND_VERSION},${QCC_GCC_BACKEND_TYPE} -lm -Bdynamic")

SET(CMAKE_CXX_LINK_EXECUTABLE  "<CMAKE_LINKER>   <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
