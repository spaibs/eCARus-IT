<?xml version="1.0" encoding="UTF-8"?>
<SET n="projectOptions" xmlns:p="GUIDE plugin">
<a n="version">5.5</a>
<a n="versionPatch">3</a>
<ProjectOptions>
<FeatureItems>
<ItemPolicy n="GTF.VirtualLayer.Layer0">
<a n="Type">0</a>
<a n="DefaultValue">Layer 1</a>
</ItemPolicy>
<ItemPolicy n="GTF.VirtualLayer.Layer1">
<a n="Type">0</a>
<a n="DefaultValue">Layer 2</a>
</ItemPolicy>
<ItemPolicy n="GTF.VirtualLayer.Layer2">
<a n="Type">0</a>
<a n="DefaultValue">Layer 3</a>
</ItemPolicy>
<ItemPolicy n="GTF.VirtualLayer.Layer3">
<a n="Type">0</a>
<a n="DefaultValue">Layer 4</a>
</ItemPolicy>
<ItemPolicy n="GTF.VirtualLayer.Layer4">
<a n="Type">0</a>
<a n="DefaultValue">Layer 5</a>
</ItemPolicy>
<ItemPolicy n="GTF.VirtualLayer.Layer5">
<a n="Type">0</a>
<a n="DefaultValue">Layer 6</a>
</ItemPolicy>
<ItemPolicy n="GTF.plugin.ConfigFiles.Editing">
<a n="Type">0</a>
<a n="DefaultValue">

// Init - Configure the libraries which shall be loaded
INIT LOAD FW_PATH &quot;GtfCore&quot;
INIT LOAD FW_PATH &quot;GtfService&quot;
INIT LOAD FW_PATH &quot;GtfWidgetSet&quot;
INIT LOAD FW_PATH &quot;GtfDisplayManager&quot;
$AUTOCONFIG_RENDERER
$SPEECH{
INIT LOAD FW_PATH &quot;GtfSpidgetSet&quot;
}

// configure type manager
STARTUP 0 MESSAGE 317 MODEL_PATH &quot;types.bin&quot;

// create core model
//  * UINT32 unique id of the model
STARTUP 100 MESSAGE 300 UINT32 0xDEADBEAF

// create a gtf core instance using the model above:
//  * UINT32 the model to attach to
//  * UINT8 the user id to use, when executing the model
STARTUP 100 MESSAGE 306 UINT32 0xDEADBEAF UINT8 0

// Create Stream Viewfactory
STARTUP 100 MESSAGE 451 UINT32 0xDEADBEAF
STARTUP 100 MESSAGE 452 UINT16 $SCENE_ID UINT16 $SCENE_WIDTH UINT16 $SCENE_HEIGHT STRBUF $SCENE_NAME

// service mapper TCP port
STARTUP 0 MESSAGE 305 UINT16 $AUTOCONFIG_PORT

			</a>
</ItemPolicy>
<ItemPolicy n="GTF.plugin.ConfigFiles.Generate">
<a n="Type">0</a>
<a n="DefaultValue">

// Init - Configure the libraries which shall be loaded
INIT LOAD FW_PATH &quot;GtfModelConverter&quot;
INIT LOAD FW_PATH &quot;GtfCore&quot;
INIT LOAD FW_PATH &quot;GtfService&quot;
INIT LOAD FW_PATH &quot;GtfWidgetSet&quot;
$SPEECH{
INIT LOAD FW_PATH &quot;GtfSpidgetSet&quot;
}

INIT LOAD MODEL_PATH &quot;TowerAccess&quot;
INIT LOAD MODEL_PATH &quot;NavigationServiceAccess&quot;
INIT LOAD MODEL_PATH &quot;MusicServiceAccess&quot;

// configure type manager
STARTUP 0 MESSAGE 317 MODEL_PATH &quot;types.bin&quot;

// configure converter
//  * STRBUF source model - where the ascii input files are searched
//  * STRBUF output path - where binary files, headers, datapool configuration and source files will be stored
//  * UINT8 Creation Model:
//	     - 0 create if missing
//	     - 1 always
//  * UINT8 Endianness:
//	     - 0 Little Endian
//	     - 1 Big Endian
//  * UINT8 Debugging:
//	     - 0 Disable Debug symbols (usually names in binary files)
//	     - 1 Enable Debug symbols
//  * UINT8 Secondard file creation - dp monitor config, binary source files, and id header files
//	     - 0 Create dp monitor config, and all source files for compilation
//	     - 1 create only target relevant binary data
STARTUP 0 MESSAGE 500 STRBUF &quot;$ASCII_MODEL_FILE&quot; STRBUF &quot;$ASCII_MODEL_FILE&quot; UINT8 1 UINT8 $BIG_ENDIAN UINT8 $DEBUG UINT8 0

// service mapper TCP port
STARTUP 0 MESSAGE 305 UINT16 $AUTOCONFIG_PORT

// request shutdown at runlevel 65535
STARTUP 65535 MESSAGE 101

			</a>
</ItemPolicy>
<ItemPolicy n="GTF.plugin.ConfigFiles.Simulation">
<a n="Type">0</a>
<a n="DefaultValue">
			
// Init - Configure the libraries which shall be loaded
$SIM{
INIT LOAD FW_PATH &quot;GtfModelConverter&quot;
}
INIT LOAD FW_PATH &quot;GtfCore&quot;
INIT LOAD FW_PATH &quot;GtfService&quot;
INIT LOAD FW_PATH &quot;GtfWidgetSet&quot;
$AUTOCONFIG_RENDERER
$SPEECH{
INIT LOAD FW_PATH &quot;GtfSpidgetSet&quot;
INIT LOAD FW_PATH &quot;GtfSpeechDialogManager&quot;
}
INIT LOAD FW_PATH &quot;GtfDisplayManager&quot;

INIT LOAD MODEL_PATH &quot;TowerAccess&quot;
INIT LOAD MODEL_PATH &quot;NavigationServiceAccess&quot;
INIT LOAD MODEL_PATH &quot;MusicServiceAccess&quot;

// configure type manager
STARTUP 0 MESSAGE 317 MODEL_PATH &quot;types.bin&quot;

// create core model
//  * UINT32 unique id of the model
STARTUP 0 MESSAGE 300 UINT32 0xDEADBEAF

// create a gtf core instance using the model above:
// -- create a thread for this core instance --
//  * UINT32 the model to attach to
//  * UINT8 the user id to use, when executing the model
STARTUP 0 MESSAGE 306 UINT32 0xDEADBEAF UINT8 0

// configure datapool
STARTUP 499 MESSAGE 308 UINT32 0xDEADBEAF         MODEL_PATH &quot;datapool.bdf&quot;
STARTUP 499 MESSAGE 309 UINT32 0xDEADBEAF         MODEL_PATH &quot;datapool.bvf&quot;

// configure state machine
STARTUP 499 MESSAGE 311 UINT32 0xDEADBEAF         MODEL_PATH &quot;model.bin&quot;
STARTUP 499 MESSAGE 312 UINT32 0xDEADBEAF         MODEL_PATH &quot;resources.bin&quot;

// optional. If this line, and the file &quot;debug.bin&quot; are both present, error messages are slightly better
STARTUP 499 MESSAGE 318 UINT32 0xDEADBEAF MODEL_PATH &quot;debug.bin&quot;

// configure converter
//  * STRBUF source model - where the ascii input files are searched
//  * STRBUF output path - where binary files, headers, datapool configuration and source files will be stored
//  * UINT8 Creation Model:
//     - 0 create if missing
//     - 1 always create
//  * UINT8 Endianness:
//     - 0 Little Endian
//     - 1 Big Endian
//  * UINT8 Debugging:
//     - 0 Disable Debug symbols (usually names in binary files)
//     - 1 Enable Debug symbols
//  * UINT8 Secondard file creation - dp monitor config, binary source files, and id header files
//     - 0 Create dp monitor config, and all source files for compilation
//     - 1 create only target relevant binary data
STARTUP 0 MESSAGE 500 MODEL_PATH &quot;&quot; MODEL_PATH &quot;&quot; UINT8 1 UINT8 0 UINT8 1 UINT8 0

// Create Binary Viewfactory
STARTUP 403 MESSAGE 450 UINT32 0xDEADBEAF MODEL_PATH &quot;views.bin&quot;

// service mapper TCP port
STARTUP 0 MESSAGE 305 UINT16 $AUTOCONFIG_PORT

$SPEECH{
//GTF_MID_GTF_ATF_ADAPTER_RUNLEVEL 
// Start ATF framework when GTF runlevel occurs 
// UINT16 runlevel 
STARTUP 0 MESSAGE 751 UINT16 1 

//GTF_MID_GTF_ATF_ADAPTER_LOADER 
// Load the ATF module loader SO library 
// STRBUF file path to module loader SO library 
// STRBUF string parameter 1 ... STFBUF string parameter n 
STARTUP 0 MESSAGE 752 STRBUF HmiModuleLoader-1.27.dll

//GTF_MID_GTF_ATF_ADAPTER_LOAD 
// Load a SO/SR library into the ATF framework 
// STRBUF file path to SO/SR library 
// STRBUF string parameter 1 ... STFBUF string parameter n 
STARTUP 0 MESSAGE 753 STRBUF SSPSOCore.dll 
STARTUP 0 MESSAGE 753 STRBUF SSPSRCore.dll
STARTUP 0 MESSAGE 753 STRBUF STFAudioIO.dll
STARTUP 0 MESSAGE 753 STRBUF STFTransSync.dll

//GTF_MID_GTF_ATF_ADAPTER_INTERFACE_ATF_2_GTF 
//Publish received ATF interface as interface in the GTF framework 
// UINT32 ATF interface ID 
// UINT32 ATF interface version number 
// UINT32 GTF interface ID 
// UINT32 GTF interface version number 
//SR_CORE (use only IDs between 1000 and 10099) 
STARTUP 0 MESSAGE 755 UINT32 1006 UINT32 2 UINT32 1006 UINT32 2 
//SO_CORE (use only IDs between 1000 and 10099) 
STARTUP 0 MESSAGE 755 UINT32 1007 UINT32 2 UINT32 1007 UINT32 2 

// STF/SO resource folder 
STARTUP 0 MESSAGE 1010 MODEL_PATH &quot;speech\so&quot;
// STF/SO write access folder (optional)
STARTUP 0 MESSAGE 1011 MODEL_PATH &quot;temp&quot;
// STF/SR resource folder (multiple messages allowed)
STARTUP 0 MESSAGE 1020 MODEL_PATH &quot;speech\sr&quot;
STARTUP 0 MESSAGE 1020 MODEL_PATH &quot;speech\sr_generated&quot;
// STF/SR temp folder
STARTUP 0 MESSAGE 1021 MODEL_PATH &quot;temp&quot;
// STF/SR persistence path
STARTUP 0 MESSAGE 1022 MODEL_PATH &quot;persistence.db&quot;
}
			
			</a>
</ItemPolicy>
<ItemPolicy n="GTFPlugin.renderers.DirectX_renderer">
<a n="Type">1</a>
<a n="DefaultValue">true</a>
</ItemPolicy>
<ItemPolicy n="GTFPlugin.renderers.OpenGL_ES_2.0_renderer">
<a n="Type">1</a>
<a n="DefaultValue">true</a>
</ItemPolicy>
<ItemPolicy n="GTFPlugin.renderers.OpenVG_renderer">
<a n="Type">1</a>
<a n="DefaultValue">true</a>
</ItemPolicy>
<ItemPolicy n="GTFPlugin.renderers.Software_renderer">
<a n="Type">1</a>
<a n="DefaultValue">true</a>
</ItemPolicy>
<ItemPolicy n="changeClassList">
<a n="Type">0</a>
<a n="DefaultValue">selectAction</a>
</ItemPolicy>
<ItemPolicy n="default.diagram.size.dpi">
<a n="Type">2</a>
<a n="DefaultValue">150</a>
</ItemPolicy>
<ItemPolicy n="default.diagram.size.format">
<a n="Type">2</a>
<a n="DefaultValue">0</a>
</ItemPolicy>
<ItemPolicy n="default.diagram.size.height">
<a n="Type">2</a>
<a n="DefaultValue">1754</a>
</ItemPolicy>
<ItemPolicy n="default.diagram.size.orientation">
<a n="Type">2</a>
<a n="DefaultValue">1</a>
</ItemPolicy>
<ItemPolicy n="default.diagram.size.width">
<a n="Type">2</a>
<a n="DefaultValue">1240</a>
</ItemPolicy>
<ItemPolicy n="defaultCommitComment">
<a n="Type">0</a>
<a n="DefaultValue">Autonomous check-in by EB GUIDE Studio.</a>
</ItemPolicy>
<ItemPolicy n="ea.defaultValueFlagInitialValue">
<a n="Type">1</a>
<a n="DefaultValue">true</a>
</ItemPolicy>
<ItemPolicy n="misc.moduleInterfaces">
<a n="Type">1</a>
<a n="DefaultValue">false</a>
</ItemPolicy>
<ItemPolicy n="project.type">
<a n="Type">2</a>
<a n="DefaultValue">0</a>
</ItemPolicy>
<ItemPolicy n="scd.view.height">
<a n="Type">3</a>
<a n="DefaultValue">100.0</a>
</ItemPolicy>
<ItemPolicy n="scd.view.width">
<a n="Type">3</a>
<a n="DefaultValue">128.0</a>
</ItemPolicy>
<ItemPolicy n="view.auto.set.languageproperty">
<a n="Type">1</a>
<a n="DefaultValue">false</a>
</ItemPolicy>
</FeatureItems>
</ProjectOptions>
</SET>
